apiVersion: apps/v1
kind: Deployment
metadata:
  name: springappdep
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec:
      containers:
      - name: springapp
        image: prakashdockertraining/spring-boot-mongo:1
        ports:
        - port:
          containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongo
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: springappsvc
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: v1
kind: ReplicationController
metadata:
  name: mongodbrc
  labels:
    app: mongo
spec:
  selector:
    app: mongo
  template:
    metadata:
      name: mongodbpod
      labels:
        app: mongo
    spec:
      containers:
      - name: mongodbcontainer
        image: mongo
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
        ports:
        -  containerPort: 27017
---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017
